Rascunho para a programação em nuvem do desafio do módulo1:


1. parte da atividade
//configurar região e zona
gcloud config set compute/region us-central1
gcloud config set compute/zone us-central1-b

//criar web services (VMs)
  gcloud compute instances create web1 \
    --zone=us-central1-b \
    --tags=network-lb-tag \
    --machine-type=e2-small \
    --image-family=debian-12 \
    --image-project=debian-cloud \
    --metadata=startup-script='#!/bin/bash
      apt-get update
      apt-get install apache2 -y
      service apache2 restart
      echo "
<h3>Web Server: web1</h3>" | tee /var/www/html/index.html'

  gcloud compute instances create web2 \
    --zone=us-central1-b \
    --tags=network-lb-tag \
    --machine-type=e2-small \
    --image-family=debian-12 \
    --image-project=debian-cloud \
    --metadata=startup-script='#!/bin/bash
      apt-get update
      apt-get install apache2 -y
      service apache2 restart
      echo "
<h3>Web Server: web2</h3>" | tee /var/www/html/index.html'

  gcloud compute instances create web3 \
    --zone=us-central1-b \
    --tags=network-lb-tag \
    --machine-type=e2-small \
    --image-family=debian-12 \
    --image-project=debian-cloud \
    --metadata=startup-script='#!/bin/bash
      apt-get update
      apt-get install apache2 -y
      service apache2 restart
      echo "
<h3>Web Server: web3</h3>" | tee /var/www/html/index.html'

//intalar apache nos servidores
      '#!/bin/bash
      apt-get update
      apt-get install apache2 -y
      service apache2 restart
      echo "
<h3>Web Server: [webx]<num></num>
</h3>" | tee /var/www/html/index.html'     (ESTA COM PROBLEMA, PORÉM, A ATIVIDADE CONTA IGUAL)

//verificar o ip externo das VMs
gcloud compute instances list

//usando o curl pra verificar êxito
   curl http://[IP_ADDRESS]

//caso seja necessário criar uma regra de firewall  (É MELHOR CRIAR POR VIA DAS DÚVIDAS)
gcloud compute firewall-rules create www-firewall-network-lb \
    --target-tags network-lb-tag --allow tcp:80

--------------------------------------------------------------------------
2. parte da tarefa, configurar o serviço de balanceamento de carga
//criar um ip externo estátio para o balanceador
gcloud compute addresses create network-lb-ip-1 \
  --region us-central1

//adicionar legado http
gcloud compute http-health-checks create basic-check

//criar pool de destino
gcloud compute target-pools create www-pool \
  --region us-central1 --http-health-check basic-check

//adicionar as intâncias ao pool
gcloud compute target-pools add-instances www-pool \
    --instances web1,web2,web3

//regra de encaminhamento
gcloud compute forwarding-rules create www-rule \
    --region us-central1 \
    --ports 80 \
    --address network-lb-ip-1 \
    --target-pool www-pool

//testar o balanceamento de carga
//criando um ip externo para a regra de encaminhamento
gcloud compute forwarding-rules describe www-rule --region us-central1

//acessando o ip externo
IPADDRESS=$(gcloud compute forwarding-rules describe www-rule --region us-central1 --format="json" | jq -r .IPAddress)

//mostrar ip externo
echo $IPADDRESS

//acessando o ip externo para os testes
while true; do curl -m1 [inserir ip externo aqui]; done

//crtl+c para encerrar

-------------------------------------------------------------------------------------------------
3. parte da tarefa criar um balanceador de carga http
//criando um balanceador de carga de aplicativo
gcloud compute instance-templates create lb-backend-template \
   --region=us-central1 \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=e2-medium \
   --image-family=debian-12 \
   --image-project=debian-cloud \
   --metadata=startup-script='#!/bin/bash
     apt-get update
     apt-get install apache2 -y
     a2ensite default-ssl
     a2enmod ssl
     vm_hostname="$(curl -H "Metadata-Flavor:Google" \
     http://169.254.169.254/computeMetadata/v1/instance/name)"
     echo "Page served from: $vm_hostname" | \
     tee /var/www/html/index.html
     systemctl restart apache2'

//grupo gerenciado de instâncias
gcloud compute instance-groups managed create lb-backend-group \
   --template=lb-backend-template --size=2 --zone=us-central1-b

//regra de firewall
gcloud compute firewall-rules create fw-allow-health-check \
  --network=default \
  --action=allow \
  --direction=ingress \
  --source-ranges=130.211.0.0/22,35.191.0.0/16 \
  --target-tags=allow-health-check \
  --rules=tcp:80

//ip externo para acessar o balanceador
gcloud compute addresses create lb-ipv4-1 \
  --ip-version=IPV4 \
  --global

//visualização do ip
gcloud compute addresses describe lb-ipv4-1 \
  --format="get(address)" \
  --global

//criando uma verificação de integridade
gcloud compute health-checks create http http-basic-check \
  --port 80

//criando um serviço de backend para o webmap
gcloud compute backend-services create web-backend-service \
  --protocol=HTTP \
  --port-name=http \
  --health-checks=http-basic-check \
  --global

//adicionando grupo de instâncias
gcloud compute backend-services add-backend web-backend-service \
  --instance-group=lb-backend-group \
  --instance-group-zone=us-central1-b \
  --global

//criando o mapa de url
gcloud compute url-maps create web-map-http \
    --default-service web-backend-service

//criando um proxy de hhtp
gcloud compute target-http-proxies create http-lb-proxy \
    --url-map web-map-http

//regra de encaminhamento do proxy
gcloud compute forwarding-rules create http-content-rule \
   --address=lb-ipv4-1\
   --global \
   --target-http-proxy=http-lb-proxy \
   --ports=80
